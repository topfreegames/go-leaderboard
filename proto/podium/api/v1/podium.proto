syntax = "proto3";
package podium.api.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service PodiumAPI {
    rpc HealthCheck (google.protobuf.Empty) returns (HealthCheckResponse);
    rpc Status (google.protobuf.Empty) returns (StatusResponse);
    rpc RemoveLeaderboard (RemoveLeaderboardRequest) returns (BasicResponse) {
        option (google.api.http) = {
            delete: "/l/{leaderboard_id}"
        };
    }
    rpc BulkUpsertScores (BulkUpsertScoresRequest) returns (BulkUpsertScoresResponse) {
        option (google.api.http) = {
            put: "/l/{leaderboard_id}/scores"
            body: "score_upserts"
        };
    }
    rpc UpsertScore (UpsertScoreRequest) returns (DefaultMemberResponse) {
        option (google.api.http) = {
            put: "/l/{leaderboard_id}/members/{member_public_id}/score"
            body: "score_change"
        };
    }
    rpc TotalMembers (TotalMembersRequest) returns (TotalMembersResponse) {
        option (google.api.http) = {
            get: "/l/{leaderboard_id}/members-count"
        };
    }
    rpc IncrementScore (IncrementScoreRequest) returns (DefaultMemberResponse) {
        option (google.api.http) = {
            patch: "/l/{leaderboard_id}/members/{member_public_id}/score"
            body: "body"
        };
    }
}

message HealthCheckResponse {
    string working_string = 1;
}

message StatusResponse {
    double error_rate = 1;
}

message RemoveLeaderboardRequest {
    string leaderboard_id = 1;
}

message ScoreUpsert {
    string publicID = 1;
    int64 score = 2;
}

message ScoreUpserts {
    repeated ScoreUpsert members = 1;
}

message BulkUpsertScoresRequest {
    string leaderboard_id = 1;
    bool prev_rank = 2;
    string scoreTTL = 3;
    ScoreUpserts score_upserts = 4;
}

message MemberResponse {
    string publicID = 1;
    double score = 2; //implemented as double because int64 is exported as string through grpc-gateway
    int64 int_score = 3; //the full int64 score received from Redis
    int32 rank = 4;
    int32 previous_rank = 5;
    int32 expire_at = 6;
}

message BulkUpsertScoresResponse {
    bool success = 1;
    repeated MemberResponse members = 2;
}

message ScoreChange {
    int64 score = 1;
}

message UpsertScoreRequest {
    string leaderboard_id = 1;
    string member_public_id = 2;
    bool prev_rank = 3;
    int32 scoreTTL = 4;
    ScoreChange score_change = 5;
}

message DefaultMemberResponse {
    bool success = 1;
    string publicID = 2;
    double score = 3; //implemented as double because int64 is exported as string through grpc-gateway
    int64 int_score = 4; //the full int64 score received from Redis
    int32 rank = 5;
    int32 previous_rank = 6;
    int32 expire_at = 7;
}

message BasicResponse {
    bool success = 1;
    string reason = 2;
}

message TotalMembersRequest {
    string leaderboard_id = 1;
}

message TotalMembersResponse {
    bool success = 1;
    int32 count = 2;
}

message IncrementScoreRequest {
    string leaderboard_id = 1;
    string member_public_id = 2;
    int32 scoreTTL = 3;

    message Body {
        int64 increment = 1;
    }

    Body body = 4;
}